{"version":3,"sources":["webpack:///../src/app/components/card/HeroAttribute/HeroAttribute.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","HeroAttribute","style","display","name","noOverlay","small","isMDXComponent"],"mappings":"+QAUaA,G,UAAe,S,yOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,iBADR,iBAGA,kBACE,GAAM,eADR,eAGA,+KAEA,mLAEA,4EACA,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gNAAuNC,SAAO,GAC/PJ,QACAH,kBACAQ,eACAC,UACAC,mBAL+P,gBAM/PV,IAN+P,EAO/PH,eAP+P,GAQ9PO,QAAQ,cACX,mBAAKO,MAAO,CACRC,QAAS,SADb,qBAII,YAAC,IAAD,CAAeC,KAAK,OAAOT,QAAQ,kBAJvC,cAMI,YAAC,IAAD,CAAeS,KAAK,OAAOC,WAAS,EAACV,QAAQ,kBANjD,SAQI,YAAC,IAAD,CAAeS,KAAK,OAAOE,OAAK,EAACX,QAAQ,0B,uOAOjDH,EAAWe,gBAAiB","file":"component---src-app-components-card-hero-attribute-hero-attribute-mdx-19489123c3011dd9e91e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/sirlarion/repos/hoxhunt_pre-assignment/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { HeroAttribute } from './index.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"heroattribute\"\n    }}>{`HeroAttribute`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Container for a single attribute of a hero. For health, stamina and mana, it displays\nthe name of the attribute, its value and a corresponding icon. `}</p>\n    <p>{`For others it displays only the icon and the value with the name popping up as a\ntooltip when hovered over. Uses React Bootstrap overlays to achieve this`}</p>\n    <p>{`Can also be used for damage types in the same way. `}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<div style={{ display: \\'flex\\' }}>\\n  Default behaviour:\\n  <HeroAttribute name=\\\"fire\\\" />\\n  No overlay:\\n  <HeroAttribute name=\\\"fire\\\" noOverlay />\\n  Small:\\n  <HeroAttribute name=\\\"fire\\\" small />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      HeroAttribute,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div style={{\n        display: \"flex\"\n      }}>\n        Default behaviour:\n        <HeroAttribute name=\"fire\" mdxType=\"HeroAttribute\" />\n        No overlay:\n        <HeroAttribute name=\"fire\" noOverlay mdxType=\"HeroAttribute\" />\n        Small:\n        <HeroAttribute name=\"fire\" small mdxType=\"HeroAttribute\" />\n    </div>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}